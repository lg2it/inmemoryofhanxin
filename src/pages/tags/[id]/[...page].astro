---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Pagination from '../../../components/Pagination.astro';
import PostPreview from '../../../components/PostPreview.astro';
import Subscribe from '../../../components/Subscribe.astro';
import siteConfig from '../../../data/site-config';
import { sortItemsByDateDesc, getAllTags, getPostsByTag } from '../../../utils/data-utils';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
    const tags = getAllTags(posts);

    // 添加调试日志
    console.log('所有标签:', JSON.stringify(tags, null, 2));

    // 确保 tags 不为空且格式正确
    if (!tags || tags.length === 0) {
        return [
            {
                params: { id: 'default' },
                props: { page: { data: [], start: 0, end: 0, total: 0, currentPage: 1, size: 4, lastPage: 1 } }
            }
        ];
    }

    // 过滤掉没有有效 id 的标签
    const validTags = tags.filter((tag) => tag.id && tag.id.trim() !== '');

    const paths = validTags.flatMap((tag) => {
        const filteredPosts = getPostsByTag(posts, tag.name); // 使用 name 而不是 id 来匹配文章
        console.log(`生成标签 "${tag.name}" (id: ${tag.id}) 的路径，文章数量: ${filteredPosts.length}`);

        return paginate(filteredPosts, {
            params: { id: tag.id },
            pageSize: siteConfig.postsPerPage || 4
        });
    });

    console.log('生成的路径数量:', paths.length);
    if (paths.length > 0) {
        console.log('第一个路径示例:', JSON.stringify(paths[0], null, 2));
    }

    return paths;
}

type Props = { page: Page<CollectionEntry<'blog'>> };

const { page } = Astro.props;
const blog = page.data;
const params = Astro.params;
const allPosts = await getCollection('blog');
const allTags = getAllTags(allPosts);
const currentTag = allTags.find((tag) => {
    return tag.id === params.id;
});
---

<BaseLayout
    title={`Posts Tagged ${currentTag?.name}`}
    description={`Explore a curated collection of blog posts under ${currentTag?.name}`}
    image={{ src: '/dante-preview.jpg', alt: 'The preview of the site' }}
    showHeader={false}
>
    <h1 class="mb-12 text-2xl leading-tight font-serif italic sm:mb-16 sm:text-4xl">Posts Tagged "{currentTag?.name}"</h1>
    {blog.map((post) => <PostPreview post={post} class="mb-10 sm:mb-12" />)}
    <Pagination page={page} class="my-16 sm:my-24" />
    <Subscribe class="my-16 sm:my-24" />
</BaseLayout>
